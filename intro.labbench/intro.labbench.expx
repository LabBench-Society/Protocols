<?xml version="1.0" encoding="UTF-8"?>
<experiment 
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:noNamespaceSchemaLocation="https://labbench.io/xsd/5.0/experiment.xsd">   
   <subject-validator 
      regex="^S[0-9]{3}$"
      advice="Please enter an ID in the form of SXXX, where X is a digit" />      
      <experimental-setup-variants default="JOYSTICK">
         <experimental-setup name="Joystick" id="JOYSTICK">
            <devices>
               <joystick id="joystick">
                  <map experimental-setup-id="image">
                     <button-assignment code="16" button="left" label="left"/> <!-- number: 5-->
                     <button-assignment code="32" button="right" label="right"/> <!--  number: 7 -->
                  </map>
                  <map experimental-setup-id="questionnaire">
                     <button-assignment code="16" button="previous" label="previous"/> <!-- number: 5-->
                     <button-assignment code="32" button="next" label="next"/> <!--  number: 7 -->
                     <button-assignment code="2" button="up" label="up" />
                     <button-assignment code="4" button="down" label="down" />
                     <button-assignment code="1" button="decrease" label="decrease" />
                     <button-assignment code="8" button="increase" label="increase" />
                  </map>  
                  <map experimental-setup-id="sstSetup">
                     <button-assignment code="80" button="left" label="Left"/> <!-- number: 5-->
                     <button-assignment code="160" button="right" label="Right"/> <!--  number: 7 -->
                  </map>
               </joystick>
            
               <display
                  id="display"
                  active-color="rgb(255,255,255)"
                  background-color="rgb(0,0,0)"
                  inactive-color="rgb(32,32,32)"
                  normative-distance="40"
                  position="fullscreen"
                  screen="secondary">
            
                  <monitor
                     diagonal-size="53.34"
                     distance="40" />
      
                  <configurations>
                     <image-display id="image" background-color="rgb(0,0,0)" />
                     
                     <questionnaire 
                        id="questionnaire"
                        experimental-setup-id="questionnaire"
                        background-color="rgb(255, 255, 255)"
                        controller-device="joystick" />
                  </configurations>                
               </display>
            </devices>
            <device-mapping>
               <device-assignment device-id="display.image" instrument-name="ImageDisplay" />                   
               <device-assignment device-id="display.questionnaire" instrument-name="Questionnaire"/>           
               <device-assignment device-id="joystick" instrument-name="Button"/>                        
            </device-mapping>
         </experimental-setup>
         <experimental-setup name="LabBench I/O" id="LIO">
            <devices>
               <lio id="lio" 
                  default-analog-output="0">
                  <response-devices>
                     <response-pad id="pad" 
                        type="button-4-cross" 
                        timing-source="response-port02">
                        <map experimental-setup-id="sstSetup">
                           <button-assignment code="5" button="left" label="Left" />
                           <button-assignment code="6" button="right" label="Right" />
                        </map>
                        <map experimental-setup-id="image">
                           <button-assignment code="5" button="left" label="left"/> <!-- number: 5-->
                           <button-assignment code="6" button="right" label="right"/> <!--  number: 7 -->
                        </map>
                        <map experimental-setup-id="questionnaire">
                           <button-assignment code="5" button="previous" label="previous"/> <!-- number: 5-->
                           <button-assignment code="6" button="next" label="next"/> <!--  number: 7 -->
                           <button-assignment code="3" button="up" label="up" />
                           <button-assignment code="1" button="down" label="down" />
                           <button-assignment code="3" button="decrease" label="decrease" />
                           <button-assignment code="1" button="increase" label="increase" />
                        </map>                
                     </response-pad>
                     <visual-trigger id="vtrig" arming-period="200" timing-source="response-port02" />
                  </response-devices>
               </lio>
            
               <display
                  id="display"
                  active-color="rgb(255,255,255)"
                  background-color="rgb(0,0,0)"
                  inactive-color="rgb(32,32,32)"
                  normative-distance="40"
                  position="fullscreen"
                  screen="secondary">
            
                  <monitor
                     diagonal-size="53.34"
                     distance="40" />
      
                  <configurations>
                     <image-display id="image" experimental-setup-id="image" background-color="rgb(0,0,0)" />

                     <questionnaire 
                        id="questionnaire"
                        experimental-setup-id="questionnaire"
                        background-color="rgb(255, 255, 255)"
                        controller-device="lio.pad" />
                  </configurations>                
               </display>
            </devices>
            <device-mapping>
               <device-assignment device-id="display.image" instrument-name="ImageDisplay" />                   
               <device-assignment device-id="display.questionnaire" instrument-name="Questionnaire"/>           
               <device-assignment device-id="lio.pad" instrument-name="Button"/>                        
            </device-mapping>
         </experimental-setup>            
      </experimental-setup-variants>
   <protocol>
      <languages>
         <language code="EN" name="English" />
         <language code="DA" name="Danish" />
      </languages>
      <defines>
         <!-- Depression, Anxiety and Stress Scale (DASS) -->
         <define name="DassTextDB" value="func: DassText.CreateText(tc)" />

            <!-- Stop Signal Game Defines -->
            <define name="StopSignalTrainingStopSignals" value="5"/> <!-- Intended value 5 -->
            <define name="StopSignalNumberOfStopSignals" value="30"/> <!-- Intended value: 30 -->
            <define name="StopSignalLowDelayLimit" value="50"/>
            <define name="StopSignalHighDelayLimit" value="750"/>
            <define name="StopSignalFixationDelay"  value="500"/>
            <define name="StopSignalResponseTimeout"  value="1000"/>
            <define name="StopSignalFeedbackDelay" value="1000"/>            
            <define name="StopSignalFeedbackTime" value="1000"/>
            <define name="StopSignalPause" value="1000"/>
            <define name="StopSignalPeriod" value="(StopSignalFixationDelay + StopSignalResponseTimeout + StopSignalFeedbackDelay + StopSignalFeedbackTime + StopSignalPause)/1000"/>

            <define name="CognitiveTask" value="func: StopSignalGameScript.CreateTask(tc)"/>
      </defines>      
      <templates>
         <content>
            <questionnaire id="DASS"
               experimental-setup-id="questionnaire"
               control="subject">
            <variables>
               <strings name="QuestionIDs" value="I01;I02;I03;I04;I05;I06;I07;I08;I09;I10;I11;I12;I13;I14;I15;I16;I17;I18;I19;I20;I31;I32;I33;I34;I35;I36;I37;I38;I39;I40;I41;I42" />
            </variables>
            <properties>
               <subject-instructions 
                  experimental-setup-id="image"
                  default="DassInstructions.DASS" />
            </properties>
            <dependencies>
               <dependency id="SUBJECT" virtual="true"/>
            </dependencies>
            <templates>               
               <likert 
                  id="LIKERT"
                  title="dynamic: DassTextDB['QUESTION']"
                  instruction="var: 'dynamic: DassTextDB[\'{q}\']'.format(q = id)">
                  <choice value="0" label="var: 'dynamic: DassTextDB[\'L0\']'" />
                  <choice value="1" label="var: 'dynamic: DassTextDB[\'L1\']'" />
                  <choice value="2" label="var: 'dynamic: DassTextDB[\'L2\']'" />
                  <choice value="3" label="var: 'dynamic: DassTextDB[\'L3\']'" />
               </likert>
            </templates>
            <content>
               <foreach variable="id" in="QuestionIDs">
                  <likert id="var: id" template="LIKERT"></likert>
               </foreach>
            </content>
            </questionnaire>

         <stimulation-sequence id="StopSignalTraining"
            experimental-setup-id="sstSetup"
            response-collection="none"
            stimulus-update-rate="44100">
            <test-events complete="CognitiveTask.Complete()" />

            <properties>
                <subject-instructions experimental-setup-id="sstSetup"
                    default="Assets.StopSignalGameImages.Instructions" 
                    completed="func: StopSignalGameScript.DisplayScore(tc)"/>
            </properties>

            <stimulation-scripts initialize="CognitiveTask.Initialize(100, 150)"
                                stimulate="CognitiveTask.Stimulate()"
                                stimulus-description="Image"
                                stimulus-unit="N/A">
                <instrument name="ImageDisplay" interface="image-display"/>
                <instrument name="Button" interface="button"/>
            </stimulation-scripts>

            <stimulation-pattern time-base="seconds">
                <sequence Tperiod="StopSignalPeriod" iterations="NumberOfStimuli * StopSignalTrainingStopSignals" />                        
            </stimulation-pattern>

            <stimuli order="block-random">
                <stimulus name="GO" count="3" />
                <stimulus name="STOP" count="1"/>
            </stimuli>
         </stimulation-sequence>

         <stimulation-sequence id="StopSignalGame"
            experimental-setup-id="sstSetup"
            response-collection="none"
            stimulus-update-rate="44100">

            <test-events complete="CognitiveTask.Complete()" />

            <properties>
                <subject-instructions experimental-setup-id="sstSetup"
                    default="Assets.StopSignalGameImages.Instructions" 
                    completed="func: StopSignalGameScript.DisplayScore(tc)"/>
            </properties>

            <stimulation-scripts initialize="CognitiveTask.Initialize(50, StopSignalTraining.Annotations.sstLastStopSignalDelay)"
                                stimulate="CognitiveTask.Stimulate()"
                                stimulus-description="Image"
                                stimulus-unit="N/A">
                <instrument name="ImageDisplay" interface="image-display"/>
                <instrument name="Button" interface="button"/>
            </stimulation-scripts>

            <stimulation-pattern time-base="seconds">
                <sequence Tperiod="StopSignalPeriod" iterations="NumberOfStimuli * StopSignalNumberOfStopSignals" />
            </stimulation-pattern>

            <stimuli order="block-random">
                <stimulus name="GO" count="3" />                        
                <stimulus name="STOP" count="1"/>
            </stimuli>
         </stimulation-sequence>    
 </content>
      </templates>
      <tests>
         <questionnaire 
            id="SUBJECT"
            name="Subject"
            experimental-setup-id="image">
            <dependencies />
            <content>
               <likert 
                  id="SEX"
                  title="Sex"
                  instruction="Please specify the biological sex of the subject">

                  <choice value="0" label="Female" />
                  <choice value="1" label="Male" />
                  <choice value="2" label="Prefer to not answer" />
               </likert>
               <numeric 
                  id="AGE"
                  title="Age"
                  instruction="Please specify the age of the subject">
                  <validation 
                     min="14"
                     min-included="true"
                     max="120"
                     max-included="true" />
               </numeric>
               <likert
                  id="HANDEDNESS"
                  title="Handedness"
                  instruction="With hand do you prefer to use for hand writing?">
                  <choice value="0" label="Right"/>
                  <choice value="1" label="Left"/>
                  <choice value="2" label="Any, I don't care"/>
              </likert>                    
            </content>
         </questionnaire>

         <questionnaire-constructor id="DASS" name="Depression, Anxietry and Stress Scale (DASS)" template="DASS" />
         <stimulation-sequence-constructor id="StopSignalTraining" name="Stop Signal Task (Training Task)" template="StopSignalTraining"/>
         <stimulation-sequence-constructor id="StopSignalGame" name="Stop Signal Game" template="StopSignalGame"/>
      </tests>
      <assets>
         <file-asset id="DassText" file="DassText_EN.py">
            <language code="DA" file="DassText_DA.py" />
         </file-asset>
         <file-asset id="DassCalculations" file="DassCalculations.py" />
         <file-asset id="DassInstructions" file="DassImages_EN.zip">
            <language code="DA" file="DassImages_DA.zip" />
         </file-asset>
         <file-asset id="OperatorInstructions" file="OperatorInstructions.zip" />

         <!-- Stop Signal Game Assets -->
         <file-asset id="StopSignalGameImages" file="StopSignalGameImages.zip" />
         <file-asset id="StopSignalGameScript" file="StopSignalGameScript.py" />
         <file-asset id="Roboto" file="Roboto-Regular.ttf" />
      </assets>
   </protocol>
   <post-actions>
      <export-to-csv name="Calculate scores and export to CSV"
            location="C:\LabBenchData\intro"
            header="true"
            separator=";"
            filename="dynamic: '{subject}.csv'.format(subject = Subject)">
            <item name="Sex" value="SUBJECT.SEX" default="NA" />
            <item name="Age" value="SUBJECT.AGE" default="NA" />
            <item name="Handedness" value="SUBJECT.HANDEDNESS" default="NA" />
            <item name="Stess" value="func: DassCalculations.Stess(tc)" default="NA" />
            <item name="Anxiety" value="func: DassCalculations.Anxiety(tc)" default="NA" />
            <item name="Depresion" value="func: DassCalculations.Depresion(tc)" default="NA" />
      </export-to-csv>
   </post-actions>
</experiment>