<?xml version="1.0" encoding="utf-8" ?>
<experiment xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xsi:noNamespaceSchemaLocation="https://labbench.io/xsd/5.0/experiment.xsd">
   <experimental-setup-variants default="LIO">
    <experimental-setup name="LabBench I/O" id="LIO">
        <devices>
            <lio id="lio">
                <trigger-setup low-byte-voltage-level="5.0V" high-byte-voltage-level="unconnected" logic-system="positive"/>
                <response-devices>
                    <visual-trigger id="vtrig" arming-period="200"  timing-source="response-port01" />
                    <response-pad id="pad" 
                        type="button-4-cross" 
                        timing-source="response-port01">
                        <map experimental-setup-id="sstSetup">
                            <button-assignment code="5" button="left" label="Left" />
                            <button-assignment code="6" button="right" label="Right" />
                        </map>
                    </response-pad>
                </response-devices>
            </lio>

            <display
                id="display"
                active-color="rgb(255,255,255)"
                background-color="rgb(0,0,0)"
                inactive-color="rgb(32,32,32)"
                normative-distance="40"
                position="fullscreen"
                screen="secondary"
                fiducial-position="upper-right">

                <monitor diagonal-size="35.5" distance="40" />
                <fiducial x="17" y="17" size="10"/>

                <configurations>
                    <image-display
                        id="image"
                        experimental-setup-id="sstSetup"
                        background-color="rgb(0,0,0)" />
                </configurations>                
            </display>         
        </devices>
        <device-mapping>
            <device-assignment device-id="lio.pad" instrument-name="Button" />
            <device-assignment device-id="display.image" instrument-name="ImageDisplay"/>
            <device-assignment device-id="lio" instrument-name="TriggerGenerator" />
        </device-mapping>        
    </experimental-setup>
   </experimental-setup-variants>                    
    <protocol>
        <defines>
            <!-- Defines for the Stop-Signal Task -->
            <define name="StopSignalTrainingStopSignals" value="5"/> <!-- Intended value: 5 -->
            <define name="StopSignalNumberOfStopSignals" value="30"/> <!-- Intended value: 30 -->
            <define name="StopSignalLowDelayLimit" value="50"/>
            <define name="StopSignalHighDelayLimit" value="750"/>
            <define name="StopSignalFixationDelay"  value="500"/>
            <define name="StopSignalResponseTimeout"  value="1000"/>
            <define name="StopSignalFeedbackDelay" value="1000"/>            
            <define name="StopSignalFeedbackTime" value="1000"/>
            <define name="StopSignalPause" value="1000"/>
            <define name="StopSignalPeriod" value="(StopSignalFixationDelay + StopSignalResponseTimeout + StopSignalFeedbackDelay + StopSignalFeedbackTime + StopSignalPause)/1000"/>

            <define name="StopSignalTrials" value="30"/>
            <define name="StopSignalAlphaX0" value="0.0"/>
            <define name="StopSignalAlphaN" value="200"/>
            <define name="StopSignalBetaX0" value="-2"/> 
            <define name="StopSignalBetaX1" value="2"/> 
            <define name="StopSignalBetaN" value="50"/>
            <define name="StopSignalIntensityX0" value="0.0"/>
            <define name="StopSignalIntensityN" value="50"/>
            <define name="StopSignalConfidenceLevel" value="0.95"/>
        </defines>
        <templates>
            <content>
                <stimulation-sequence id="StopSignalTaskTraining"
                    experimental-setup-id="sstSetup"
                    response-collection="none"
                    stimulus-update-rate="44100">
                    <test-events complete="func: StopSignalScript.Complete(tc)" />

                    <properties>
                        <subject-instructions experimental-setup-id="sstSetup"
                            default="Assets.StopSignalImages.Instructions" />
                    </properties>

                    <stimulation-scripts initialize="func: StopSignalScript.UpDownInitialize(tc)"
                                        stimulate="func: StopSignalScript.Stimulate(tc,x)"
                                        stimulus-description="Image"
                                        stimulus-unit="N/A">
                        <instrument name="ImageDisplay" interface="image-display"/>
                        <instrument name="Button" interface="button"/>
                        <instrument name="TriggerGenerator" interface="trigger-generator" />
                    </stimulation-scripts>

                    <stimulation-pattern time-base="seconds">
                        <sequence Tperiod="StopSignalPeriod" iterations="NumberOfStimuli * StopSignalTrainingStopSignals" />                        
                    </stimulation-pattern>

                    <stimuli order="block-random">
                        <stimulus name="GO" count="3" />
                        <stimulus name="STOP" count="1"/>
                    </stimuli>
                </stimulation-sequence>

                <stimulation-sequence id="StopSignalTask"
                    experimental-setup-id="sstSetup"
                    response-collection="none"
                    stimulus-update-rate="44100">

                    <test-events complete="func: StopSignalScript.Complete(tc)" />

                    <properties>
                        <subject-instructions experimental-setup-id="sstSetup"
                            default="Assets.StopSignalImages.Instructions" />
                    </properties>

                    <stimulation-scripts initialize="func: StopSignalScript.PsiInitialize(tc)"
                                        stimulate="func: StopSignalScript.Stimulate(tc,x)"
                                        stimulus-description="Image"
                                        stimulus-unit="N/A">
                        <instrument name="ImageDisplay" interface="image-display"/>
                        <instrument name="Button" interface="button"/>
                        <instrument name="TriggerGenerator" interface="trigger-generator" />
                    </stimulation-scripts>

                    <stimulation-pattern time-base="seconds">
                        <sequence Tperiod="StopSignalPeriod" iterations="NumberOfStimuli * StopSignalNumberOfStopSignals" />
                    </stimulation-pattern>

                    <stimuli order="block-random">
                        <stimulus name="GO" count="3" />                        
                        <stimulus name="STOP" count="1"/>
                    </stimuli>
                </stimulation-sequence>    
            </content>
        </templates>
        <tests>
            <stimulation-sequence-constructor id="StopSignalTaskTraining" 
                name="Stop Signal Task (Training Task)"
                template="StopSignalTaskTraining" />

            <stimulation-sequence-constructor id="StopSignalTask" 
                name="Stop Signal Task"
                template="StopSignalTask"/>
        </tests>
        <assets>
            <file-asset id="StopSignalImages" file="StopSignalImages.zip" />
            <file-asset id="StopSignalScript" file="StopSignalScript.py" />
        </assets>
    </protocol>
    <post-actions>
        
    </post-actions>
</experiment>
