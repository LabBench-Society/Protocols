<?xml version="1.0" encoding="utf-8" ?>
<experiment xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xsi:noNamespaceSchemaLocation="https://labbench.io/xsd/5.0/experiment.xsd">
   <experimental-setup-variants default="JOYSTICK">
    <experimental-setup name="Joystick" id="JOYSTICK">
        <devices>
            <joystick id="joystick">
                <map experimental-setup-id="sstSetup">
                    <button-assignment code="80" button="left" label="Left"/> <!-- number: 5-->
                    <button-assignment code="160" button="right" label="Right"/> <!--  number: 7 -->
                </map>
            </joystick>

            <display
                id="display"
                active-color="rgb(255,255,255)"
                background-color="rgb(0,0,0)"
                inactive-color="rgb(32,32,32)"
                normative-distance="40"
                position="fullscreen"
                screen="secondary">

                <monitor diagonal-size="35.5" distance="40" />
                <fiducial size="10" x="17" y="17"/>

                <configurations>
                    <image-display
                        id="image"
                        experimental-setup-id="sstSetup"
                        background-color="rgb(0,0,0)" />
                </configurations>                
            </display>         
        </devices>
        <device-mapping>
            <device-assignment device-id="joystick" instrument-name="Button" />
            <device-assignment device-id="display.image" instrument-name="ImageDisplay"/>
            <device-assignment device-id="joystick" instrument-name="TriggerGenerator" />
        </device-mapping>        
    </experimental-setup>    
    <experimental-setup name="LabBench I/O" id="LIO">
        <devices>
            <lio
                id="lio" 
                default-analog-output="0">
                <response-devices>
                    <response-pad
                        id="pad" 
                        type="button-4-cross" 
                        timing-source="response-port02">
                        <map experimental-setup-id="sstSetup">
                            <button-assignment code="5" button="left" label="Left" />
                            <button-assignment code="6" button="right" label="Right" />
                        </map>
                    </response-pad>
                    <visual-trigger 
                        id="vtrig"
                        arming-period="200" 
                        timing-source="response-port02" />
                </response-devices>
            </lio>

            <display
                id="display"
                active-color="rgb(255,255,255)"
                background-color="rgb(0,0,0)"
                inactive-color="rgb(32,32,32)"
                normative-distance="40"
                position="fullscreen"
                screen="secondary">

                <monitor diagonal-size="35.5" distance="40" />
                <fiducial size="10" x="17" y="17"/>

                <configurations>
                    <image-display
                        id="image"
                        experimental-setup-id="sstSetup"
                        background-color="rgb(0,0,0)" />
                </configurations>                
            </display>         
        </devices>
        <device-mapping>
            <device-assignment device-id="lio.pad" instrument-name="Button" />
            <device-assignment device-id="display.image" instrument-name="ImageDisplay"/>
            <device-assignment device-id="lio" instrument-name="TriggerGenerator" />
        </device-mapping>        
    </experimental-setup>
   </experimental-setup-variants>                    
    <protocol>
        <defines>
            <!-- Stop Signal Game Defines -->
            <define name="StopSignalTrainingStopSignals" value="5"/> <!-- Intended value 5 -->
            <define name="StopSignalNumberOfStopSignals" value="30"/> <!-- Intended value: 30 -->
            <define name="StopSignalLowDelayLimit" value="50"/>
            <define name="StopSignalHighDelayLimit" value="750"/>
            <define name="StopSignalFixationDelay"  value="500"/>
            <define name="StopSignalResponseTimeout"  value="1000"/>
            <define name="StopSignalFeedbackDelay" value="1000"/>            
            <define name="StopSignalFeedbackTime" value="1000"/>
            <define name="StopSignalPause" value="1000"/>
            <define name="StopSignalPeriod" value="(StopSignalFixationDelay + StopSignalResponseTimeout + StopSignalFeedbackDelay + StopSignalFeedbackTime + StopSignalPause)/1000"/>

            <define name="CognitiveTask" value="func: StopSignalGameScript.CreateTask(tc)"/>
        </defines>
        <templates>
            <content>
                <stimulation-sequence id="StopSignalTraining"
                    experimental-setup-id="sstSetup"
                    response-collection="none"
                    stimulus-update-rate="44100">
                    <test-events complete="CognitiveTask.Complete()" />

                    <properties>
                        <subject-instructions experimental-setup-id="sstSetup"
                            default="Assets.StopSignalGameImages.Instructions" 
                            completed="func: StopSignalGameScript.DisplayScore(tc)"/>
                    </properties>

                    <stimulation-scripts initialize="CognitiveTask.Initialize(100, 150)"
                                        stimulate="CognitiveTask.Stimulate()"
                                        stimulus-description="Image"
                                        stimulus-unit="N/A">
                        <instrument name="ImageDisplay" interface="image-display"/>
                        <instrument name="Button" interface="button"/>
                        <instrument name="TriggerGenerator" interface="trigger-generator" />
                    </stimulation-scripts>

                    <stimulation-pattern time-base="seconds">
                        <sequence Tperiod="StopSignalPeriod" iterations="NumberOfStimuli * StopSignalTrainingStopSignals" />                        
                    </stimulation-pattern>

                    <stimuli order="block-random">
                        <stimulus name="GO" count="3" />
                        <stimulus name="STOP" count="1"/>
                    </stimuli>
                </stimulation-sequence>

                <stimulation-sequence id="StopSignalGame"
                    experimental-setup-id="sstSetup"
                    response-collection="none"
                    stimulus-update-rate="44100">

                    <test-events complete="CognitiveTask.Complete()" />

                    <properties>
                        <subject-instructions experimental-setup-id="sstSetup"
                            default="Assets.StopSignalGameImages.Instructions" 
                            completed="func: StopSignalGameScript.DisplayScore(tc)"/>
                    </properties>

                    <stimulation-scripts initialize="CognitiveTask.Initialize(50, StopSignalTraining.Annotations.sstLastStopSignalDelay)"
                                        stimulate="CognitiveTask.Stimulate()"
                                        stimulus-description="Image"
                                        stimulus-unit="N/A">
                        <instrument name="ImageDisplay" interface="image-display"/>
                        <instrument name="Button" interface="button"/>
                        <instrument name="TriggerGenerator" interface="trigger-generator" />
                    </stimulation-scripts>

                    <stimulation-pattern time-base="seconds">
                        <sequence Tperiod="StopSignalPeriod" iterations="NumberOfStimuli * StopSignalNumberOfStopSignals" />
                    </stimulation-pattern>

                    <stimuli order="block-random">
                        <stimulus name="GO" count="3" />                        
                        <stimulus name="STOP" count="1"/>
                    </stimuli>
                </stimulation-sequence>    
            </content>
        </templates>
        <tests>
            <stimulation-sequence-constructor id="StopSignalTraining" name="Stop Signal Task (Training Task)" template="StopSignalTraining"/>
            <stimulation-sequence-constructor id="StopSignalGame" name="Stop Signal Game" template="StopSignalGame"/>
        </tests>
        <assets>
            <file-asset id="StopSignalGameImages" file="StopSignalGameImages.zip" />
            <file-asset id="StopSignalGameScript" file="StopSignalGameScript.py" />
            <file-asset id="Roboto" file="Roboto-Regular.ttf" />
        </assets>
    </protocol>
    <post-actions>
        <export-to-csv name="Export to CSV"
            location="C:\LabBenchData\cogni.sst.game"
            header="true"
            separator=";"
            filename="dynamic: '{subject}.csv'.format(subject = Subject)">
            <item name="ID" value="Subject" default="NA"/>
            <item name="Score" value="StopSignalGame.Annotations.score" default="NA" />
            <item name="RT" value="func: StopSignalGameScript.CalculateRT(tc)" default="NA" />
            <item name="SSD" value="func: StopSignalGameScript.CalculateSSD(tc)" default="NA" />
            <item name="SSRT" value="func: StopSignalGameScript.CalculateSSRT(tc)" default="NA" />
        </export-to-csv>                
    </post-actions>
</experiment>
